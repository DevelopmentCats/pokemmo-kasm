name: Scheduled Update Check

on:
  schedule:
    - cron: "0 3 * * *"  # Run at 3 AM every day
  workflow_dispatch:  # Allow manual trigger

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  check-and-update:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for PokeMMO updates
        id: check
        run: |
          mkdir -p /tmp/pokemmo
          wget -q https://pokemmo.com/download_file/1/ -O /tmp/pokemmo/PokeMMO-Client.zip
          unzip -qq /tmp/pokemmo/PokeMMO-Client.zip -d /tmp/pokemmo
          NEW_VERSION=$(cat /tmp/pokemmo/revision.txt)
          if [ -z "${NEW_VERSION}" ]; then
            echo "Failed to get PokeMMO version"
            exit 1
          fi
          echo "new_version=${NEW_VERSION}" >> "$GITHUB_OUTPUT"
          echo "Found PokeMMO version: ${NEW_VERSION}"

          # Get current version from latest image if it exists
          if docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest 2>/dev/null; then
            CURRENT_VERSION=$(docker inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest | jq -r '.[0].Config.Labels["org.opencontainers.image.version"]')
            echo "current_version=${CURRENT_VERSION}" >> "$GITHUB_OUTPUT"
            echo "Current version: ${CURRENT_VERSION}"
          else
            echo "No current version found, will build new image"
            echo "current_version=0" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up Docker Buildx
        if: steps.check.outputs.new_version != steps.check.outputs.current_version
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        if: steps.check.outputs.new_version != steps.check.outputs.current_version
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        if: steps.check.outputs.new_version != steps.check.outputs.current_version
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.check.outputs.new_version }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=PokeMMO Client
            org.opencontainers.image.description=PokeMMO client as X11 application
            org.opencontainers.image.version=${{ steps.check.outputs.new_version }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.licenses=MIT

      - name: Build and push
        if: steps.check.outputs.new_version != steps.check.outputs.current_version
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
