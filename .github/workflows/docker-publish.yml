name: "🐳 Docker Build & Publish"

on:
  push:
    branches: [ "master" ]
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: "🧪 Run Tests"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      version: ${{ steps.pokemmo_version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PokeMMO Version
        id: pokemmo_version
        run: |
          mkdir -p /tmp/pokemmo
          wget -q https://pokemmo.com/download_file/1/ -O /tmp/pokemmo/PokeMMO-Client.zip
          unzip -qq /tmp/pokemmo/PokeMMO-Client.zip -d /tmp/pokemmo
          VERSION=$(cat /tmp/pokemmo/revision.txt)
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Found PokeMMO version: ${VERSION}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build test image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ghcr.io/${{ github.repository_owner_id }}/${{ github.event.repository.name }}-test:${{ steps.pokemmo_version.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.version=${{ steps.pokemmo_version.outputs.version }}

      - name: Test image
        run: |
          # Set up X11 for testing
          export DISPLAY=:99
          sudo Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          sleep 3

          # Run the container
          docker run -d --name pokemmo \
            -e DISPLAY=:99 \
            -v /tmp/.X11-unix:/tmp/.X11-unix \
            ghcr.io/${{ github.repository_owner_id }}/${{ github.event.repository.name }}-test:${{ steps.pokemmo_version.outputs.version }}

          # Wait for container to start
          sleep 10

          # Check if container is running
          docker ps | grep pokemmo

          # Check if Java process is running
          docker exec pokemmo ps aux | grep java

          # Check if ROMs were downloaded
          docker exec pokemmo ls -l /pokemmo/roms/

          # Check logs for any errors
          docker logs pokemmo

  publish:
    name: "📦 Build & Push Image"
    needs: test # This ensures publish only runs after test job succeeds
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=${{ needs.test.outputs.version }},enable=true
            type=raw,value=latest,enable={{is.default}}
          labels: |
            org.opencontainers.image.title=PokeMMO Client
            org.opencontainers.image.description=PokeMMO client as X11 application
            org.opencontainers.image.version=${{ needs.test.outputs.version }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.licenses=MIT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 